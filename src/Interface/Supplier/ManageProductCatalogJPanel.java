/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Supplier;

import Business.Enterprise;
import Business.Organization.AdminOrganization;
import Business.Supplier.Product;
import Business.Supplier.Supplier;
import Business.Supplier.SupplierDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hema
 */

public class ManageProductCatalogJPanel extends javax.swing.JPanel {
    
    /**
     * Creates new form ManageProductCatalogJPanel
     */
    Supplier supplier;
    SupplierDirectory supplierDirectory;
    private JPanel container;
    Enterprise enterprise;
    public ManageProductCatalogJPanel(JPanel container, Supplier supplier, SupplierDirectory supplierDirectory, Enterprise enterprise) {
        initComponents();
        this.container = container;
        this.supplier = supplier;
        this.supplierDirectory = supplierDirectory;
        this.enterprise = enterprise;
        populateTable();
    }

    private void populateTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) productJTable.getModel();
            model.setRowCount(0);
            for(Product p : supplier.getProductDirectory().getProductList()){
                Object[] row = new Object[3];
                row[0] = p;
                row[1] = p.getProductId();
                row[2] = p.getPrice();
                model.addRow(row);
            }
        }
        catch(Exception e) {}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        createProductJButton = new javax.swing.JButton();
        removeProductJButton = new javax.swing.JButton();
        viewProductJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Products");

        productJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productJTable);
        if (productJTable.getColumnModel().getColumnCount() > 0) {
            productJTable.getColumnModel().getColumn(0).setResizable(false);
            productJTable.getColumnModel().getColumn(1).setResizable(false);
            productJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        backJButton.setBackground(new java.awt.Color(204, 204, 204));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        createProductJButton.setText("Create Product");
        createProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createProductJButtonActionPerformed(evt);
            }
        });

        removeProductJButton.setText("Remove Product");
        removeProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductJButtonActionPerformed(evt);
            }
        });

        viewProductJButton.setText("View Product");
        viewProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewProductJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshJButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createProductJButton)
                        .addGap(36, 36, 36)
                        .addComponent(removeProductJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(viewProductJButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(jLabel1)
                    .addComponent(refreshJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createProductJButton)
                    .addComponent(removeProductJButton)
                    .addComponent(viewProductJButton))
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createProductJButtonActionPerformed
        // TODO add your handling code here:
        CreateProductJPanel createProductJPanel = new CreateProductJPanel(container, supplier, supplierDirectory, enterprise);
        CardLayout layout = (CardLayout) container.getLayout();
        container.add("Create Product", createProductJPanel);
        layout.next(container);
    }//GEN-LAST:event_createProductJButtonActionPerformed

    private void viewProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProductJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = productJTable.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Invalid Option", JOptionPane.WARNING_MESSAGE);
        }
        Product product = (Product) productJTable.getValueAt(selectedRow, 0);
        ViewAndUpdateProductJPanel viewAndUpdateProductJPanel = new ViewAndUpdateProductJPanel(container, product);
        container.add(viewAndUpdateProductJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_viewProductJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void removeProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = productJTable.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row", "Invalid Option", JOptionPane.WARNING_MESSAGE);
        }
        int option = JOptionPane.showConfirmDialog(null, "Are you sure", "Delete Product", JOptionPane.YES_NO_OPTION);
        if(option == JOptionPane.NO_OPTION){
            return;
        }
        Product product = (Product) productJTable.getValueAt(selectedRow, 0);
        supplier.getProductDirectory().deleteProduct(product);
        populateTable();
    }//GEN-LAST:event_removeProductJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton createProductJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable productJTable;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeProductJButton;
    private javax.swing.JButton viewProductJButton;
    // End of variables declaration//GEN-END:variables
}
