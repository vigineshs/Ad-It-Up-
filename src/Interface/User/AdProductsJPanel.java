/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.User;

import Business.Advertiser.Ads;
import Business.Enterprise;
import Business.FinancialAccount.FinanceAccount;
import Business.FinancialAccount.FinanceAccountDirectory;
import Business.Network.Network;
import Business.Order.MasterOrderCatalog;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.AdvertiserOrganization;
import Business.Organization.Organization;
import Business.Supplier.Product;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BiddingWorkRequest;
import java.awt.CardLayout;
import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Hema
 */
public class AdProductsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdProductsJPanel
     */
    JPanel container;
    Ads ad;
    UserAccount userAccount;
    Order order;
    Product product;
    MasterOrderCatalog masterOrderCatalog;
    FinanceAccountDirectory financeAccountDirectory;
    Enterprise enterprise;
    BiddingWorkRequest biddingWorkRequest;
    Boolean flag = false;
    public AdProductsJPanel(JPanel container, UserAccount userAccount, BiddingWorkRequest biddingWorkRequest, MasterOrderCatalog masterOrderCatalog, FinanceAccountDirectory financeAccountDirectory, Enterprise enterprise) {
        initComponents();
        this.container = container;
        this.biddingWorkRequest = biddingWorkRequest;
        this.userAccount = userAccount;
        this.masterOrderCatalog = masterOrderCatalog;
        this.financeAccountDirectory = financeAccountDirectory;
        this.enterprise = enterprise;
        ad = biddingWorkRequest.getAd();
        order = new Order();
        populateContent();
        checkOutJPanel.setVisible(false);
    }

    private void populateContent() {
        
        product = ad.getProduct();
        productNameJTextField.setText(product.getProductName());
        productIdJTextField.setText(String.valueOf(product.getProductId()));
        productPriceJTextField.setText(String.valueOf(product.getPrice()));
        descriptionJLabel.setText(product.getProductDescription());
        Image image = new ImageIcon(product.getProductLink()).getImage();
        ImageIcon icon = new ImageIcon(product.scaleImage(image, 177, 150));
        imageJLabel.setIcon(icon);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionJLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productPriceJTextField = new javax.swing.JTextField();
        productNameJTextField = new javax.swing.JTextField();
        productIdJTextField = new javax.swing.JTextField();
        buyJButton = new javax.swing.JButton();
        quantityJSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        backJButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        imageJLabel = new javax.swing.JLabel();
        checkOutJPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cardNumberJTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        expirationMonthJTextField = new javax.swing.JTextField();
        expirationYearJTextField = new javax.swing.JTextField();
        confirmJButton = new javax.swing.JButton();
        cvvJTextField = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        descriptionJLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        add(descriptionJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 44, 382, 24));

        jLabel4.setText("Product Price");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 196, -1, -1));

        jLabel3.setText("Product ID");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 128, -1, -1));

        jLabel2.setText("Product Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 89, -1, -1));

        productPriceJTextField.setEditable(false);
        add(productPriceJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 193, 102, -1));

        productNameJTextField.setEditable(false);
        add(productNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 86, 102, -1));

        productIdJTextField.setEditable(false);
        add(productIdJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(121, 125, 102, -1));

        buyJButton.setText("Buy");
        buyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyJButtonActionPerformed(evt);
            }
        });
        add(buyJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 301, -1, -1));
        add(quantityJSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 256, 44, -1));

        jLabel5.setText("Quantity");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 259, -1, -1));

        backJButton5.setText("Back");
        backJButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton5ActionPerformed(evt);
            }
        });
        add(backJButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 85, -1, -1));

        checkOutJPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel11.setText("Valid Thru");

        jLabel12.setText("cvv");

        jLabel13.setText("Card No.");

        jLabel14.setText("/");

        confirmJButton.setText("Confirm");
        confirmJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout checkOutJPanelLayout = new javax.swing.GroupLayout(checkOutJPanel);
        checkOutJPanel.setLayout(checkOutJPanelLayout);
        checkOutJPanelLayout.setHorizontalGroup(
            checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkOutJPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(checkOutJPanelLayout.createSequentialGroup()
                        .addGroup(checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(checkOutJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cvvJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(confirmJButton)
                            .addGroup(checkOutJPanelLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(expirationMonthJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(expirationYearJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(checkOutJPanelLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(cardNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        checkOutJPanelLayout.setVerticalGroup(
            checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(checkOutJPanelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cardNumberJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cvvJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(checkOutJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(expirationMonthJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expirationYearJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(checkOutJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(557, 86, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void buyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyJButtonActionPerformed
        // TODO add your handling code here:
        OrderItem orderItem = order.createOrderitem();
        orderItem.setProduct(product);
        orderItem.setQuantity((int) quantityJSpinner.getValue());
        orderItem.setAmount(((int)quantityJSpinner.getValue()) * product.getPrice());
        orderItem.setBuyer(userAccount.getUsername());
        orderItem.setSeller(ad.getSeller());
        Date date = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss a");
        String created = sdf.format(date);
        orderItem.setTimeStamp(created);
        checkOutJPanel.setVisible(true);
    }//GEN-LAST:event_buyJButtonActionPerformed

    private void backJButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton5ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButton5ActionPerformed

    private void confirmJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmJButtonActionPerformed
        // TODO add your handling code here:
        if(cardNumberJTextField.getText().equals("") || cvvJTextField.getText().equals("") || expirationMonthJTextField.getText().equals("") || expirationYearJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please fill all the fields", "Empty Text", JOptionPane.WARNING_MESSAGE);
            return;
        }
        for(FinanceAccount financeAccount : financeAccountDirectory.getFinanceAccountList()) {
            if(userAccount.getUsername().equals(financeAccount.getUsername())) {
                if(!financeAccount.getCardNo().equals(cardNumberJTextField.getText()) || !financeAccount.getCvv().equals(cvvJTextField.getText()) || financeAccount.getExpirationMonth() != Integer.parseInt(expirationMonthJTextField.getText()) || financeAccount.getExpirationYear() != Integer.parseInt(expirationYearJTextField.getText())) {
                    JOptionPane.showMessageDialog(null, "Please check all the payment fields", "Payment Credentials doesn't match", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        }
        for(OrderItem orderItem : order.getOrders()) {
            for(FinanceAccount financeAccount : financeAccountDirectory.getFinanceAccountList()) {
                if(financeAccount.getUsername().equals(orderItem.getBuyer())) {
                    financeAccount.setBalance(financeAccount.getBalance() - orderItem.getAmount());
                    System.out.println("user paid");
                }
                for(Network network : enterprise.getNetworkDirectory().getNetworkList()) {
                    for(Organization organization : network.getOrganizationDirectory().getOrganizationList()) {
                        if(organization instanceof AdvertiserOrganization) {
                            AdvertiserOrganization advertiserOrganization = (AdvertiserOrganization) organization;
                            for(FinanceAccount financeAccount1 : advertiserOrganization.getFinancialAccountDirectory().getFinanceAccountList()) {
                                if(financeAccount1.getUsername().equals(orderItem.getSeller())) {
                                    Double amount = orderItem.getAmount() - (0.05 * orderItem.getAmount());
                                    financeAccount1.setBalance(financeAccount1.getBalance() + amount);
                                    System.out.println("Advertiser credited");
                                }
                            }
                        }
                    }
                        for(FinanceAccount financeAccount1 : enterprise.getAdminOrganization().getFinancialAccountDirectory().getFinanceAccountList()) {
                            if(financeAccount1.getUsername().equals("systemadmin")) {
                                Double amount = 0.05 * orderItem.getAmount();
                                financeAccount1.setBalance(financeAccount1.getBalance() + amount + biddingWorkRequest.getBidValue() );
                                System.out.println("System Admin credited");
                                flag = true;
                            }
                            if(flag)
                                break;
                        }
                }
            }
        }
        
        masterOrderCatalog.addOrder(order);
    }//GEN-LAST:event_confirmJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton5;
    private javax.swing.JButton buyJButton;
    private javax.swing.JTextField cardNumberJTextField;
    private javax.swing.JPanel checkOutJPanel;
    private javax.swing.JButton confirmJButton;
    private javax.swing.JTextField cvvJTextField;
    private javax.swing.JLabel descriptionJLabel;
    private javax.swing.JTextField expirationMonthJTextField;
    private javax.swing.JTextField expirationYearJTextField;
    private javax.swing.JLabel imageJLabel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField productIdJTextField;
    private javax.swing.JTextField productNameJTextField;
    private javax.swing.JTextField productPriceJTextField;
    private javax.swing.JSpinner quantityJSpinner;
    // End of variables declaration//GEN-END:variables
}
