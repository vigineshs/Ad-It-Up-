/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface.Advertiser;

import Business.Advertiser.AdDirectory;
import Business.Advertiser.Ads;
import Business.BidCategory.BidCategory;
import Business.BidCategory.ProfileCategory;
import Business.Enterprise;
import Business.Organization.AdminOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BiddingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hema
 */
public class ManageBiddingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageBiddingJPanel
     */
    JPanel container;
    UserAccount userAccount;
    AdDirectory adDirectory;
    Enterprise enterprise;
    AdminOrganization adminOrganization;
    Double bid;
    public ManageBiddingJPanel(JPanel container, UserAccount userAccount, AdDirectory adDirectory, Enterprise enterprise) {
        initComponents();
        this.container = container;
        this.userAccount = userAccount;
        this.adDirectory = adDirectory;
        this.enterprise = enterprise;
        this.adminOrganization = (AdminOrganization) enterprise.getAdminOrganization();
        populateAdSpaceComboBox();
        populateProfileTypeComboBox();
        populateAdComboBox();
        populateActiveBids();
        populateYourBids();
    }

    private void populateAdSpaceComboBox() {
        adSpaceJComboBox.removeAllItems();
        for(BidCategory bidCategory : adminOrganization.getBidCategoryDirectory().getBidCategoryList()) {
            adSpaceJComboBox.addItem(bidCategory);
        }
    }
    
    private void populateProfileTypeComboBox() {
        profileTypeComboBox.removeAllItems();
        for(ProfileCategory profileCategory : adminOrganization.getProfileCategoryDirectory().getProfileCategoryList())
            profileTypeComboBox.addItem(profileCategory);
    }
    
    private void populateAdComboBox() {
        adJComboBox.removeAllItems();
        for(Ads ads : adDirectory.getAdList())
            adJComboBox.addItem(ads);
    }
    
    private void populateActiveBids() {
        DefaultTableModel model = (DefaultTableModel) activeBidsJTable.getModel();
        model.setRowCount(0);
        for(BiddingWorkRequest biddingWorkRequest : adminOrganization.getWorkQueue().getActiveBids()) {
            Object[] row = new Object[3];
            row[0] = biddingWorkRequest;
            row[1] = biddingWorkRequest.getProfileCategory();
            row[2] = biddingWorkRequest.getBidValue();
            model.addRow(row);
        }
    }
    
    private void populateYourBids() {
        DefaultTableModel model = (DefaultTableModel) yourBidsTable.getModel();
        model.setRowCount(0);
        for(BiddingWorkRequest biddingWorkRequest : userAccount.getWorkQueue().getBiddingWorkRequests()) {
            Object[] row = new Object[4];
            row[0] = biddingWorkRequest;
            row[1] = biddingWorkRequest.getProfileCategory();
            row[2] = biddingWorkRequest.getAd();
            row[3] = biddingWorkRequest.getBidValue();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        activeBidsJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        yourBidsTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        adSpaceJComboBox = new javax.swing.JComboBox();
        adSpaceJLabel = new javax.swing.JLabel();
        profileTypeJLabel = new javax.swing.JLabel();
        basePriceJTextField = new javax.swing.JTextField();
        bidValueJTextField = new javax.swing.JTextField();
        placeBidJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        adJComboBox = new javax.swing.JComboBox();
        adDescriptionJLabel = new javax.swing.JLabel();
        profileTypeComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        backJButton7 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Manage Bid");

        activeBidsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bid Category", "Profile Category", "Bid Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(activeBidsJTable);
        if (activeBidsJTable.getColumnModel().getColumnCount() > 0) {
            activeBidsJTable.getColumnModel().getColumn(0).setResizable(false);
            activeBidsJTable.getColumnModel().getColumn(1).setResizable(false);
            activeBidsJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        yourBidsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bid Category", "Profile Category", "Ad", "Bid Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(yourBidsTable);
        if (yourBidsTable.getColumnModel().getColumnCount() > 0) {
            yourBidsTable.getColumnModel().getColumn(0).setResizable(false);
            yourBidsTable.getColumnModel().getColumn(1).setResizable(false);
            yourBidsTable.getColumnModel().getColumn(2).setResizable(false);
            yourBidsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setText("Ad Space");

        jLabel3.setText("Profile Type");

        jLabel4.setText("Base Value");

        jLabel5.setText("Bid Value");

        adSpaceJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adSpaceJComboBoxActionPerformed(evt);
            }
        });

        adSpaceJLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        profileTypeJLabel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        basePriceJTextField.setEditable(false);

        placeBidJButton.setText("Place Bid");
        placeBidJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeBidJButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Ad");

        adJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adJComboBoxActionPerformed(evt);
            }
        });

        profileTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Top Bids");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Your Bids");

        backJButton7.setText("Back");
        backJButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(214, 214, 214)
                        .addComponent(placeBidJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton7)
                        .addGap(325, 325, 325)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(adSpaceJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(basePriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bidValueJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(adJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(adSpaceJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(profileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(profileTypeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(adDescriptionJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel7))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(backJButton7))
                .addGap(6, 6, 6)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(adSpaceJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adSpaceJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(profileTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(profileTypeJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(adJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adDescriptionJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(basePriceJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(bidValueJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(placeBidJButton)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void placeBidJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeBidJButtonActionPerformed
        // TODO add your handling code here:
        if(adSpaceJComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Ad category not available", "Unavailable", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(profileTypeComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Profile category not available", "Unavailable", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(adJComboBox.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Ad not available", "Unavailable", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String bid = bidValueJTextField.getText();
        for(int i = 0; i <bid.length();i++){
            char c = bid.charAt(i);
            if(c<48 || c>57){
                if( c != 46) {
                    JOptionPane.showMessageDialog(null, "Bid field should contain only number", "Mismatch", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
        }
        if(basePriceJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Base price not available", "Unavailable", JOptionPane.WARNING_MESSAGE);
            return;
        }
        BiddingWorkRequest biddingWorkRequest = (BiddingWorkRequest) userAccount.getWorkQueue().createAndAddWorkRequest(WorkRequest.Type.Bidding);
        biddingWorkRequest.setBidCategory((BidCategory) adSpaceJComboBox.getSelectedItem());
        biddingWorkRequest.setProfileCategory((ProfileCategory) profileTypeComboBox.getSelectedItem());
        biddingWorkRequest.setAd((Ads) adJComboBox.getSelectedItem());
        biddingWorkRequest.setBidValue(Float.parseFloat(basePriceJTextField.getText()) + Float.parseFloat(bidValueJTextField.getText()));
        biddingWorkRequest.setSender(userAccount.getUsername());
        biddingWorkRequest.setPageHit(0);
        userAccount.getWorkQueue().addWorkRequest(biddingWorkRequest);
        adminOrganization.getWorkQueue().addWorkRequest(biddingWorkRequest);
        populateActiveBids();
        populateYourBids();
        JOptionPane.showMessageDialog(null, "Your bid is placed", "Success", JOptionPane.WARNING_MESSAGE);
        basePriceJTextField.setText("");
        bidValueJTextField.setText("");
    }//GEN-LAST:event_placeBidJButtonActionPerformed

    private void adSpaceJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adSpaceJComboBoxActionPerformed
        // TODO add your handling code here:
        bid =0.0;
        BidCategory bidCategory = (BidCategory) adSpaceJComboBox.getSelectedItem();
        adSpaceJLabel.setText(bidCategory.getAdSpaceDesccription());
        bid = bidCategory.getBasePrice();
        basePriceJTextField.setText(String.valueOf(bid));
    }//GEN-LAST:event_adSpaceJComboBoxActionPerformed

    private void profileTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileTypeComboBoxActionPerformed
        // TODO add your handling code here:
        Double bid1 = 0.0;
        ProfileCategory profileCategory = (ProfileCategory) profileTypeComboBox.getSelectedItem();
        profileTypeJLabel.setText(profileCategory.getCategoryDescription());
        bid1  = bid + profileCategory.getBasePrice();
        basePriceJTextField.setText(String.valueOf(bid1));
    }//GEN-LAST:event_profileTypeComboBoxActionPerformed

    private void adJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adJComboBoxActionPerformed
        // TODO add your handling code here:
        Ads ads = (Ads) adJComboBox.getSelectedItem();
        adDescriptionJLabel.setText(ads.getAdString());
    }//GEN-LAST:event_adJComboBoxActionPerformed

    private void backJButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton7ActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backJButton7ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable activeBidsJTable;
    private javax.swing.JLabel adDescriptionJLabel;
    private javax.swing.JComboBox adJComboBox;
    private javax.swing.JComboBox adSpaceJComboBox;
    private javax.swing.JLabel adSpaceJLabel;
    private javax.swing.JButton backJButton7;
    private javax.swing.JTextField basePriceJTextField;
    private javax.swing.JTextField bidValueJTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton placeBidJButton;
    private javax.swing.JComboBox profileTypeComboBox;
    private javax.swing.JLabel profileTypeJLabel;
    private javax.swing.JTable yourBidsTable;
    // End of variables declaration//GEN-END:variables
}
